#!/bin/sh

# Use neovim for vim if present.
[ -x "$(command -v nvim)" ] && alias vim="nvim" vimdiff="nvim -d"

# Verbosity and settings that you pretty much just always are going to want.
alias \
	cp="cp -iv" \
	mv="mv -iv" \
	rm="trash -vi" \
	mkd="mkdir -pv" \

# Colorize commands when possible.
alias \
        ls="lsd --group-dirs first --classify --color=auto" \
        la="lsd --almost-all --color=auto --human-readable --classify --group-dirs first -l" \
        l="ls -l --color=auto --human-readable --classify --group-dirs first -l" \
	grep="grep --color=auto" \
	diff="diff --color=auto" \

# These common commands are just too long! Abbreviate them.
alias \
	ka="killall" \
	g="git" \
	f="$FILE" \
	e="$EDITOR" \
        o="xdg-open" \
        oo="xdg-open ." \
	v="$EDITOR" \

alias \
        config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME' \
        hdmi="xrandr --output HDMI2 --auto --left-of eDP1" \
	sdn="sudo shutdown -h now" \

# https://github.com/jackpot51/dotfiles/blob/master/bash/.bash_aliases
if command -v flatpak > /dev/null
then
    # Get a list of flatpak applications in the reverse domain name format
    readarray -t ids < <(flatpak list --app --columns=application)
    for id in "${ids[@]}"
    do
        # Take everything past the last dot (the name)
        name="${id##*.}"
        # Make it lowercase to approximate binary name
        binary="${name,,}"

        # If there is not already a command at that name
        if ! command -v "${binary}" > /dev/null
        then
            # Create an alias that runs the flatpak
            alias "$binary=flatpak run \"$id\""
        fi
    done
fi
